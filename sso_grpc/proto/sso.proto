syntax = "proto3";
package sso;

import "google/protobuf/any.proto";
import "annotations.proto";

service Sso {
    // Returns pong response.
    rpc Ping (Empty) returns (Text) {
        option (google.api.http) = {
            get: "/ping"
        };
    }

    // Returns metrics in Prometheus exposition format.
    rpc Metrics (Empty) returns (Text) {
        option (google.api.http) = {
            get: "/metrics"
        };
    }

    rpc AuditList (AuditListRequest) returns (AuditListReply) {
        option (google.api.http) = {
            get: "/v1/audit"
        };
    }
}

message Empty {}

message Text {
    string text = 1;
}

message AuditListRequest {
    string ge = 1;
    string le = 2;
    int64 limit = 3;
    string offset_id = 4;
    repeated string id = 5;
    repeated string type = 6;
    repeated string subject = 7;
    repeated string service_id = 8;
    repeated string user_id = 9;
}

message AuditListReply {
    AuditListRequest meta = 1;
    repeated Audit data = 2;
}

message Audit {
    string created_at = 1;
    string updated_at = 2;
    string id = 3;
    string user_agent = 4;
    string remote = 5;
    string forwarded = 6;
    uint32 status_code = 7;
    string type = 8;
    string subject = 9;
    google.protobuf.Any data = 10;
}
