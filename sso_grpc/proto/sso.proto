syntax = "proto3";
package sso;

import "annotations.proto";

service Sso {
    // Returns pong response.
    rpc Ping (Empty) returns (Text) {
        option (google.api.http) = {
            get: "/ping"
            response_body: "text"
        };
    }

    // Returns metrics in Prometheus exposition format.
    rpc Metrics (Empty) returns (Text) {
        option (google.api.http) = {
            get: "/metrics"
            response_body: "text"
        };
    }

    // List audit logs.
    rpc AuditList (AuditListRequest) returns (AuditListReply) {
        option (google.api.http) = {
            get: "/v1/audit"
        };
    }

    // Create audit log.
    rpc AuditCreate(AuditCreateRequest) returns (AuditReadReply) {
        option (google.api.http) = {
            post: "/v1/audit"
            body: "*"
        };
    }

    // Read audit log.
    rpc AuditRead(AuditReadRequest) returns (AuditReadReply) {
        option (google.api.http) = {
            get: "/v1/audit/{id}"
        };
    }

    // Update audit log.
    rpc AuditUpdate(AuditUpdateRequest) returns (AuditReadReply) {
        option (google.api.http) = {
            patch: "/v1/audit/{id}"
            body: "*"
        };
    }
}

message Empty {}

message Text {
    string text = 1;
}

message AuditListRequest {
    string ge = 1;
    string le = 2;
    int64 limit = 3;
    string offset_id = 4;
    repeated string id = 5;
    repeated string type = 6;
    repeated string subject = 7;
    repeated string service_id = 8;
    repeated string user_id = 9;
}

message AuditListReply {
    AuditListRequest meta = 1;
    Audit data = 2;
}

message AuditCreateRequest {
    string type = 1;
    string subject = 2;
    string data = 3;
    string user_id = 4;
    string user_key_id = 5;
}

message AuditReadRequest {
    string id = 1;
}

message AuditReadReply {
    Audit data = 1;
}

message AuditUpdateRequest {
    string id = 1;
    uint32 status_code = 2;
    string subject = 3;
    string data = 4;
}

message Audit {
    string created_at = 1;
    string updated_at = 2;
    string id = 3;
    string user_agent = 4;
    string remote = 5;
    string forwarded = 6;
    uint32 status_code = 7;
    string type = 8;
    string subject = 9;
    string data = 10;
    string key_id = 11;
    string service_id = 12;
    string user_id = 13;
    string user_key_id = 14;
}
