# ```bash
# # Build all services.
# docker-compose build
#
# # Start services.
# docker-compose up [$service]
#
# # Stop/destroy services.
# docker-compose stop
# docker-compose down
# ```
version: "3"

services:
  # PostgreSQL.
  # <https://www.postgresql.org/>
  postgres:
    build: docker/postgres
    restart: always
    environment:
      POSTGRES_USER: guest
      POSTGRES_PASSWORD: guest
    ports:
      - "5432:5432"

  # Prometheus.
  # <https://prometheus.io/>
  prometheus:
    build: docker/prometheus
    restart: always
    labels:
      - "traefik.enable=true"
      - "traefik.http.services.prometheus.loadbalancer.server.port=9090"
      - "traefik.http.routers.prometheus.entrypoints=http"
      - "traefik.http.routers.prometheus.rule=Host(`prometheus.localhost`)"

  # Sso gRPC server.
  sso-grpc:
    build: docker/sso
    image: sso:latest
    depends_on:
      - postgres
    restart: always
    environment:
      RUST_BACKTRACE: "1"
      RUST_LOG: "info"
      # Postgres connection.
      SSO_POSTGRES_URL: "postgres://guest:guest@postgres:5432/sso"
      SSO_POSTGRES_CONNECTIONS: "10"
      # # SMTP server transport.
      # SSO_SMTP_HOST: ""
      # SSO_SMTP_PORT: ""
      # SSO_SMTP_USER: ""
      # SSO_SMTP_PASSWORD: ""
      # Pwned Passwords integration.
      SSO_PWNED_PASSWORDS: "true"
      # Traefik forward authentication integration.
      SSO_TRAEFIK: "true"
      # # Github OAuth2 support.
      # SSO_GITHUB_CLIENT_ID: ""
      # SSO_GITHUB_CLIENT_SECRET: ""
      # # Microsoft OAuth2 support.
      # SSO_MICROSOFT_CLIENT_ID: ""
      # SSO_MICROSOFT_CLIENT_SECRET: ""
    entrypoint: ["sso-grpc"]
    labels:
      - "traefik.enable=true"
      - "traefik.http.services.sso-grpc.loadbalancer.server.scheme=h2c"
      - "traefik.http.services.sso-grpc.loadbalancer.server.port=7042"
      - "traefik.http.middlewares.sso-grpc-auth.forwardauth.address=http://sso-grpc:7043/hook/traefik/self"
      - "traefik.http.middlewares.sso-grpc-auth.forwardauth.trustForwardHeader=true"
      - "traefik.http.middlewares.sso-grpc-auth.forwardauth.authResponseHeaders=Grpc-Metadata-Sso-Key-Id,Grpc-Metadata-Sso-Service-Id,Grpc-Metadata-Sso-User-Key-Id,Grpc-Metadata-Sso-User-Id"
      - "traefik.http.routers.sso-grpc.service=sso-grpc"
      - "traefik.http.routers.sso-grpc.entrypoints=http"
      - "traefik.http.routers.sso-grpc.rule=Host(`sso.localhost`)"
      - "traefik.http.routers.sso-grpc.middlewares=sso-grpc-auth"

  # Sso OpenAPI server.
  sso-openapi:
    build: docker/sso
    image: sso:latest
    restart: always
    environment:
      # gRPC server URL.
      SSO_GRPC_URL: "sso-grpc:7042"
    entrypoint: ["sso-openapi"]
    labels:
      - "traefik.enable=true"
      - "traefik.http.services.sso-openapi.loadbalancer.server.port=8042"
      - "traefik.http.middlewares.sso-openapi-prefix.stripprefix.prefixes=/api"
      - "traefik.http.middlewares.sso-openapi-auth.forwardauth.address=http://sso-grpc:7043/hook/traefik/self"
      - "traefik.http.middlewares.sso-openapi-auth.forwardauth.trustForwardHeader=true"
      - "traefik.http.middlewares.sso-openapi-auth.forwardauth.authResponseHeaders=Grpc-Metadata-Sso-Key-Id,Grpc-Metadata-Sso-Service-Id,Grpc-Metadata-Sso-User-Key-Id,Grpc-Metadata-Sso-User-Id"
      - "traefik.http.routers.sso-openapi.service=sso-openapi"
      - "traefik.http.routers.sso-openapi.entrypoints=http"
      - "traefik.http.routers.sso-openapi.rule=Host(`sso.localhost`) && PathPrefix(`/api`)"
      - "traefik.http.routers.sso-openapi.middlewares=sso-openapi-prefix,sso-openapi-auth"

  # Traefik.
  # <https://docs.traefik.io/>
  traefik:
    image: traefik:latest
    restart: always
    command:
      - "--api.insecure=true"
      - "--providers.docker=true"
      - "--providers.docker.exposedbydefault=false"
      - "--providers.docker.network=compose"
      - "--entrypoints.http.address=:80"
      - "--metrics.prometheus"
      - "--accessLog"
    ports:
      - "80:80"
      - "8080:8080"
    volumes:
      - "/var/run/docker.sock:/var/run/docker.sock:ro"

networks:
  default:
    external:
      name: compose
