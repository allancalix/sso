# ```bash
# # Build all services.
# docker-compose build
# # Start services.
# docker-compose up postgres sso-grpc sso-openapi sso-nginx
# # Stop/destroy services.
# docker-compose stop
# docker-compose destroy
# ```
version: "3"

services:
  # PostgreSQL service.
  # <https://www.postgresql.org/>
  postgres:
    build: docker/postgres
    image: sso/postgres:latest
    restart: always
    environment:
      POSTGRES_USER: guest
      POSTGRES_PASSWORD: guest
    ports:
      - "5432:5432"

  # Prometheus service.
  # <https://prometheus.io/>
  prometheus:
    build: docker/prometheus
    image: sso/prometheus:latest
    restart: always
    ports:
      - "9090:9090"

  # Sso gRPC service.
  sso-grpc:
    build: docker/sso-grpc
    image: sso/grpc:latest
    depends_on:
      - postgres
    restart: always
    environment:
      RUST_BACKTRACE: "1"
      RUST_LOG: "info"
      # Database connection.
      SSO_DATABASE_URL: "postgres://guest:guest@postgres:5432/sso"
      SSO_DATABASE_CONNECTIONS: "10"
      # SMTP server transport.
      # SSO_SMTP_HOST: ""
      # SSO_SMTP_PORT: ""
      # SSO_SMTP_USER: ""
      # SSO_SMTP_PASSWORD: ""
    ports:
      - "7042:7042"
      - "7043:7043"

  # Sso OpenAPI gateway service.
  sso-openapi:
    build: docker/sso-openapi
    image: sso/openapi:latest
    restart: always
    environment:
      # gRPC server URL.
      SSO_OPENAPI_GRPC_URL: "sso-grpc:7042"
    ports:
      - "8042:8042"

  # Sso nginx service.
  # <https://www.nginx.com/>
  sso-nginx:
    build: docker/sso-nginx
    image: sso/nginx:latest
    restart: always
    ports:
      - "8080:80"

networks:
  default:
    external:
      name: compose
