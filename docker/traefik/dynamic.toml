
# Default certificate store.
# <https://docs.traefik.io/https/tls/#default-certificate>
[tls.stores]
    [tls.stores.default]
        [tls.stores.default.defaultCertificate]
            certFile = "/cert/sso.crt"
            keyFile  = "/cert/sso.key"

# Mutual TLS.
# <https://docs.traefik.io/https/tls/#client-authentication-mtls>
[tls.options]
    [tls.options.default]
        minVersion = "VersionTLS12"

        [tls.options.default.clientAuth]
            caFiles = ["/cert/root_ca.crt"]
            # clientAuthType = "RequireAndVerifyClientCert"
            # clientAuthType = "VerifyClientCertIfGiven"

[http.routers]
    [http.routers.SsoOpenapiRouter]
        entrypoints = ["SsoEntrypoint"]
        rule = "(Host(`traefik`) || Host(`sso.localhost`)) && PathPrefix(`/api`)"
        middlewares = ["SsoOpenapiStripprefixMiddleware", "SsoForwardauthMiddleware"]
        service = "SsoOpenapiService"
        # [http.routers.SsoOpenapiRouter.tls]
        #     options = "default"

    [http.routers.SsoGrpcRouter]
        entrypoints = ["SsoEntrypoint"]
        rule = "(Host(`traefik`) || Host(`sso.localhost`)) && PathPrefix(`/sso.Sso`)"
        middlewares = ["SsoForwardauthMiddleware"]
        service = "SsoGrpcService"
        # [http.routers.SsoGrpcRouter.tls]
        #     options = "default"

    [http.routers.PrometheusRouter]
        entrypoints = ["SsoEntrypoint"]
        rule = "Host(`prometheus.localhost`)"
        service = "PrometheusService"

[http.services]
    [http.services.SsoOpenapiService.loadBalancer]
        [[http.services.SsoOpenapiService.loadBalancer.servers]]
            url = "http://sso-openapi:8042"

    [http.services.SsoGrpcService.loadBalancer]
        [[http.services.SsoGrpcService.loadBalancer.servers]]
            url = "h2c://sso-grpc:7042"

    [http.services.PrometheusService.loadBalancer]
        [[http.services.PrometheusService.loadBalancer.servers]]
            url = "http://prometheus:9090"

[http.middlewares]
    [http.middlewares.SsoOpenapiStripprefixMiddleware.stripPrefix]
        prefixes = ["/api"]

    [http.middlewares.SsoForwardauthMiddleware.forwardAuth]
        address = "http://sso-grpc:7043/hook/traefik/self"
        trustForwardHeader = false
        authResponseHeaders = ["Grpc-Metadata-Sso-Key-Id","Grpc-Metadata-Sso-Service-Id","Grpc-Metadata-Sso-User-Key-Id","Grpc-Metadata-Sso-User-Id"]

# [tcp.routers]
#     [tcp.routers.postgresRouter]
#         entrypoints = ["postgresEntrypoint"]
#         rule = "HostSNI(`*`)"
#         service = "postgresService"

# [tcp.services]
#     [tcp.services.postgresService.loadBalancer]
#         [[tcp.services.postgresService.loadBalancer.servers]]
#             address = "postgres:5432"
