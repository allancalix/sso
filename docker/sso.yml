version: "3"
services:
  # PostgreSQL.
  # <https://www.postgresql.org/>
  postgres:
    build: postgres
    restart: always
    environment:
      POSTGRES_USER: guest
      POSTGRES_PASSWORD: guest
    ports:
      - "5432:5432"

  # Prometheus.
  # <https://prometheus.io/>
  prometheus:
    build: prometheus
    restart: always

  # Sso gRPC server.
  sso-grpc:
    image: sso/sso:v1
    depends_on:
      - postgres
    restart: always
    environment:
      RUST_BACKTRACE: "1"
      RUST_LOG: "info"
      # Postgres connection.
      SSO_POSTGRES_URL: "postgres://guest:guest@postgres:5432/sso"
      SSO_POSTGRES_CONNECTIONS: "10"
      # # SMTP server transport.
      # SSO_SMTP_HOST: ""
      # SSO_SMTP_PORT: ""
      # SSO_SMTP_USER: ""
      # SSO_SMTP_PASSWORD: ""
      # SMTP file transport.
      SSO_SMTP_FILE: "./tmp"
      # Pwned Passwords integration.
      SSO_PWNED_PASSWORDS: "true"
      # Traefik forward authentication integration.
      SSO_TRAEFIK: "true"
      # # Github OAuth2 support.
      # SSO_GITHUB_CLIENT_ID: ""
      # SSO_GITHUB_CLIENT_SECRET: ""
      # # Microsoft OAuth2 support.
      # SSO_MICROSOFT_CLIENT_ID: ""
      # SSO_MICROSOFT_CLIENT_SECRET: ""
    entrypoint: ["sso-grpc"]

  # Sso OpenAPI server.
  sso-openapi:
    image: sso/sso:v1
    restart: always
    environment:
      # gRPC server URL.
      SSO_GRPC_URL: "sso-grpc:7042"
      # CORS allow origins.
      SSO_CORS_ALLOW_ORIGIN: ""
    entrypoint: ["sso-openapi"]

  # Traefik.
  # <https://docs.traefik.io/>
  traefik:
    image: traefik:v2.1.6
    restart: always
    ports:
      - "80:80"
      - "443:443"
      - "8080:8080"
    volumes:
      - "/var/run/docker.sock:/var/run/docker.sock:ro"
      - "./build/cert:/cert"
      - "./traefik:/etc/traefik"

networks:
  default:
    external:
      name: compose
