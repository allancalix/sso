syntax = "proto3";
package sso;

import "google/protobuf/empty.proto";
import "google/protobuf/timestamp.proto";
import "google/protobuf/wrappers.proto";
import "annotations.proto";

service Sso {
    // Returns pong response.
    rpc Ping (google.protobuf.Empty) returns (google.protobuf.StringValue) {
        option (google.api.http) = {
            get: "/ping"
            response_body: "value"
        };
    }

    // Returns metrics in Prometheus exposition format.
    rpc Metrics (google.protobuf.Empty) returns (google.protobuf.StringValue) {
        option (google.api.http) = {
            get: "/metrics"
            response_body: "value"
        };
    }

    // List audit logs.
    rpc AuditList (AuditListRequest) returns (AuditListReply) {
        option (google.api.http) = {
            get: "/v1/audit"
        };
    }

    // Create audit log.
    rpc AuditCreate(AuditCreateRequest) returns (AuditReadReply) {
        option (google.api.http) = {
            post: "/v1/audit"
            body: "*"
        };
    }

    // Read audit log.
    rpc AuditRead(AuditReadRequest) returns (AuditReadReply) {
        option (google.api.http) = {
            get: "/v1/audit/{id}"
        };
    }

    // Update audit log.
    rpc AuditUpdate(AuditUpdateRequest) returns (AuditReadReply) {
        option (google.api.http) = {
            patch: "/v1/audit/{id}"
            body: "*"
        };
    }
}

// List audit logs request.
message AuditListRequest {
    // Greater than or equal to date and time.
    google.protobuf.Timestamp ge = 1;
    // Less than or equal to date and time.
    google.protobuf.Timestamp le = 2;
    // Limit number of returned logs.
    google.protobuf.Int64Value limit = 3;
    // Offset log UUID for paging.
    google.protobuf.StringValue offset_id = 4;
    // Log UUID filter array.
    repeated string id = 5;
    // Log type filter array.
    repeated string type = 6;
    // Log subject filter array.
    repeated string subject = 7;
    // Log service UUID filter array.
    repeated string service_id = 8;
    // Log user UUID filter array.
    repeated string user_id = 9;
}

// List audit logs reply.
message AuditListReply {
    // Request message.
    AuditListRequest meta = 1;
    // Logs array.
    repeated Audit data = 2;
}

// Create audit log request.
message AuditCreateRequest {
    // Log type.
    string type = 1;
    // Log subject.
    google.protobuf.StringValue subject = 2;
    // Log key, value data.
    map<string, string> data = 3;
    // Log user UUID.
    google.protobuf.StringValue user_id = 4;
    // Log user key UUID.
    google.protobuf.StringValue user_key_id = 5;
}

// Read audit log request.
message AuditReadRequest {
    string id = 1;
}

// Read audit log reply.
message AuditReadReply {
    // Log.
    Audit data = 1;
}

// Update audit log request.
message AuditUpdateRequest {
    // Log UUID.
    string id = 1;
    // Log status code.
    google.protobuf.UInt32Value status_code = 2;
    // Log subject.
    google.protobuf.StringValue subject = 3;
    // Log key, value data.
    map<string, string> data = 4;
}

// Audit log.
message Audit {
    // Created at date and time.
    google.protobuf.Timestamp created_at = 1;
    // Updated at date and time.
    google.protobuf.Timestamp updated_at = 2;
    // UUID.
    string id = 3;
    string user_agent = 4;
    string remote = 5;
    google.protobuf.StringValue forwarded = 6;
    google.protobuf.UInt32Value status_code = 7;
    string type = 8;
    google.protobuf.StringValue subject = 9;
    map<string, string> data = 10;
    google.protobuf.StringValue key_id = 11;
    google.protobuf.StringValue service_id = 12;
    google.protobuf.StringValue user_id = 13;
    google.protobuf.StringValue user_key_id = 14;
}

// List keys request.
message KeyListRequest {
    // Greater than key UUID.
    google.protobuf.StringValue gt = 1;
    // Less than key UUID.
    google.protobuf.StringValue lt = 2;
    // Limit number of returned keys.
    google.protobuf.Int64Value limit = 3;
    // Key UUID filter array.
    repeated string id = 4;
    // Key is_enabled flag filter.
    google.protobuf.BoolValue is_enabled = 5;
    // Key is_revoked flag filter.
    google.protobuf.BoolValue is_revoked = 6;
    // Key type filter array.
    repeated string type = 7;
    // Key service UUID filter array.
    repeated string service_id = 8;
    // Key user UUID filter array.
    repeated string user_id = 9;
}
