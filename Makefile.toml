# Default targets:
# - clean
# - clippy
# - format (fmt)
# - check

[tasks.grpc-protoc]
workspace = false
script = [
    "(cd sso_grpc/proto && protoc -I/usr/local/include -I. -I$HOME/go/src --go_out=plugins=grpc:../../sso_openapi sso.proto)",
    "(cd sso_grpc/proto && protoc -I/usr/local/include -I. -I$HOME/go/src --grpc-gateway_out=logtostderr=true:../../sso_openapi sso.proto)",
    "(cd sso_grpc/proto && protoc -I/usr/local/include -I. -I$HOME/go/src --swagger_out=logtostderr=true:../../sso_openapi sso.proto)",
]

[tasks.grpc-gateway]
workspace = false
script = [
    "(cd sso_openapi && go build -o sso-openapi-server)",
]

# TODO(refactor): Update below for grpc.

[tasks.postgres-reset]
workspace = false
script = [
    "(cd sso && DATABASE_URL=\"postgres://guest:guest@localhost:5432/sso\" diesel database reset --migration-dir migrations/postgres)",
]

[tasks.postgres-migration]
workspace = false
script = [
    "(cd sso && DATABASE_URL=\"postgres://guest:guest@localhost:5432/sso\" diesel migration generate ${@} --migration-dir migrations/postgres)",
]

[tasks.docker-build]
workspace = false
script = [
    "touch docker/postgres/sso.pgdump",
    "(cd docker && docker-compose build)",
]

[tasks.docker-up]
workspace = false
script = [
    "(cd docker && docker-compose up)",
]
dependencies = ["docker-build"]

[tasks.docker-pg-dump]
workspace = false
script = [
    "docker exec docker_postgres_1 pg_dump -U guest --format=custom sso > docker/postgres/sso.pgdump",
]

[tasks.docker-pg-restore]
workspace = false
script = [
    "docker exec docker_postgres_1 bash /opt/pg_restore.sh",
]

[tasks.docker-stop]
workspace = false
script = [
    "(cd docker && docker-compose stop)",
]

[tasks.docker-down]
workspace = false
script = [
    "(cd docker && docker-compose down)",
]

[tasks.manual]
workspace = false
script = [
    "pandoc docs/manual/*.md -f markdown --to=html5 --template=docs/template.html --self-contained --toc --toc-depth=2 --number-sections --css=docs/pandoc.css --output=docs/index.html",
]

[tasks.audit]
workspace = false
command = "cargo"
args = ["audit"]

[tasks.build]
workspace = false
command = "cargo"
args = ["build"]
dependencies = ["format"]

[tasks.test]
workspace = false
command = "cargo"
args = ["test"]
dependencies = ["format"]

[tasks.test-integration]
workspace = false
command = "cargo"
args = ["test", "--", "--ignored"]
dependencies = ["format"]

[tasks.doc]
workspace = false
command = "cargo"
args = ["doc", "--no-deps", "--open"]
dependencies = ["format"]

[tasks.release]
workspace = false
command = "cargo"
args = ["build", "--release"]
dependencies = ["format"]

[tasks.release-flow]
workspace = false
dependencies = ["manual", "doc", "test", "release"]
# test-integration

[tasks.install]
workspace = false
command = "cargo"
args = ["install", "--force", "--path", "sso"]
dependencies = ["release"]
