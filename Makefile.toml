# Default targets:
# - clean
# - clippy
# - format (fmt)
# - check

[tasks.protoc]
workspace = false
script = [
    "(cd sso/proto && protoc -I/usr/local/include -I. -I$HOME/go/src --go_out=plugins=grpc:../../sso_openapi sso.proto)",
    "(cd sso/proto && protoc -I/usr/local/include -I. -I$HOME/go/src --grpc-gateway_out=logtostderr=true:../../sso_openapi sso.proto)",
    "(cd sso/proto && protoc -I/usr/local/include -I. -I$HOME/go/src --swagger_out=logtostderr=true:../../sso_openapi sso.proto)",
    "(cd sso/proto && protoc -I/usr/local/include -I. -I$HOME/go/src --dart_out=../../sso_openapi/dart sso.proto)",
]

[tasks.openapi-bin]
workspace = false
script = [
    "(cd sso_openapi && gofmt -w . && go build -o sso-openapi)",
]

[tasks.postgres-reset]
workspace = false
script = [
    "(cd sso && DATABASE_URL=\"postgres://guest:guest@postgres:5432/sso\" diesel database reset)",
]

[tasks.postgres-migration]
workspace = false
script = [
    "(cd sso && DATABASE_URL=\"postgres://guest:guest@postgres:5432/sso\" diesel migration generate ${@})",
]

[tasks.sso-cli]
workspace = false
script = [
    "(cd sso && cargo build)",
    "/build/target/debug/sso-cli ${@}"
]

[tasks.sso-grpc]
workspace = false
script = [
    "(cd sso && cargo build)",
    "/build/target/debug/sso-grpc"
]

[tasks.sso-openapi]
workspace = false
script = [
    "/build/sso_openapi/sso-openapi"
]
dependencies = ["openapi-bin"]

[tasks.audit]
workspace = false
command = "cargo"
args = ["audit"]

[tasks.build]
workspace = false
command = "cargo"
args = ["build"]
dependencies = ["format"]

[tasks.test]
workspace = false
command = "cargo"
args = ["test"]
dependencies = ["format"]

[tasks.test-integration]
workspace = false
command = "cargo"
args = ["test", "--", "--ignored"]
dependencies = ["format"]

[tasks.doc]
workspace = false
command = "cargo"
args = ["doc", "--no-deps"]
dependencies = ["format"]

[tasks.release]
workspace = false
command = "cargo"
args = ["build", "--release"]
dependencies = ["format"]
