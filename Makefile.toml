# Default targets:
# - clean
# - clippy
# - format (fmt)
# - check

[tasks.openapi-protoc]
workspace = false
script = [
    "(cd sso_grpc/proto && protoc -I/usr/local/include -I. -I/root/go/src --go_out=plugins=grpc:../../sso_openapi sso.proto)",
    "(cd sso_grpc/proto && protoc -I/usr/local/include -I. -I/root/go/src --grpc-gateway_out=logtostderr=true:../../sso_openapi sso.proto)",
    "(cd sso_grpc/proto && protoc -I/usr/local/include -I. -I/root/go/src --swagger_out=logtostderr=true:../../sso_openapi sso.proto)",
]

[tasks.openapi-bin]
workspace = false
script = [
    "(cd sso_openapi && gofmt -w . && go build -o sso-openapi-server)",
]

[tasks.postgres-reset]
workspace = false
script = [
    "(cd sso && DATABASE_URL=\"postgres://guest:guest@localhost:5432/sso\" diesel database reset)",
]

[tasks.postgres-migration]
workspace = false
script = [
    "(cd sso && DATABASE_URL=\"postgres://guest:guest@localhost:5432/sso\" diesel migration generate ${@})",
]

[tasks.manual]
workspace = false
script = [
    "pandoc docs/manual/*.md -f markdown --to=html5 --template=docs/template.html --self-contained --toc --toc-depth=2 --number-sections --css=docs/pandoc.css --output=docs/index.html",
]

[tasks.audit]
workspace = false
command = "cargo"
args = ["audit"]

[tasks.build]
workspace = false
command = "cargo"
args = ["build"]
dependencies = ["format"]

[tasks.test]
workspace = false
command = "cargo"
args = ["test"]
dependencies = ["format"]

[tasks.test-integration]
workspace = false
command = "cargo"
args = ["test", "--", "--ignored"]
dependencies = ["format"]

[tasks.doc]
workspace = false
command = "cargo"
args = ["doc", "--no-deps"]
dependencies = ["format"]

[tasks.release]
workspace = false
command = "cargo"
args = ["build", "--release"]
dependencies = ["format"]
